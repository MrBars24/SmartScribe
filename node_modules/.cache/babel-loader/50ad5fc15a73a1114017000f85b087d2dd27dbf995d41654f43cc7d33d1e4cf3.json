{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { ref, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\nexport default {\n  name: 'NoteDetailView',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const note = ref(null);\n    const isLoading = ref(true);\n    const showExportOptions = ref(false);\n    const quizQuestions = ref([]);\n    onMounted(async () => {\n      try {\n        const noteId = parseInt(route.params.id);\n\n        // In a real app, we would fetch the note from the store\n        // await store.dispatch('notes/fetchNote', noteId);\n        // note.value = store.getters['notes/getCurrentNote'];\n\n        // For now, we'll use mock data\n        setTimeout(() => {\n          note.value = {\n            id: noteId,\n            title: 'Biology Notes - Chapter 5',\n            lastEdited: 'May 14, 2025 at 3:45 PM',\n            originalText: 'The cell is the basic structural, functional, and biological unit of all known organisms. Cells are the smallest units of life, and hence are often referred to as the \"building blocks of life\". The study of cells is called cell biology, cellular biology, or cytology.\\n\\nCells consist of cytoplasm enclosed within a membrane, which contains many biomolecules such as proteins and nucleic acids. Most plant and animal cells are only visible under a light microscope, with dimensions between 1 and 100 micrometres. Cells were discovered by Robert Hooke in 1665, who named them for their resemblance to cells inhabited by Christian monks in a monastery.',\n            summary: 'Cells are the fundamental units of life, discovered by Robert Hooke in 1665. They are microscopic structures containing cytoplasm, proteins, and nucleic acids enclosed within a membrane. Cell biology (cytology) is the scientific study of cells. Cells range from 1-100 micrometers in size and are only visible under microscopes.',\n            keywords: ['Cell', 'Biology', 'Cytology', 'Robert Hooke', 'Microscopic']\n          };\n          isLoading.value = false;\n        }, 1000);\n      } catch (error) {\n        console.error('Error loading note:', error);\n        isLoading.value = false;\n      }\n    });\n    const editNote = () => {\n      if (note.value) {\n        router.push(`/notes/edit?id=${note.value.id}`);\n      }\n    };\n    const exportNote = format => {\n      console.log(`Exporting note as ${format}...`);\n      showExportOptions.value = false;\n\n      // In a real app, this would call the export API\n      // For now, we'll just show an alert\n      setTimeout(() => {\n        alert(`Note exported as ${format.toUpperCase()} successfully!`);\n      }, 1000);\n    };\n    const generateQuiz = () => {\n      console.log('Generating quiz...');\n\n      // In a real app, this would call the GPT API\n      // For now, we'll use mock data\n      setTimeout(() => {\n        quizQuestions.value = [{\n          text: 'Who discovered cells in 1665?',\n          options: ['Robert Hooke', 'Anton van Leeuwenhoek', 'Matthias Schleiden', 'Theodor Schwann'],\n          correctAnswer: 0,\n          selectedAnswer: null\n        }, {\n          text: 'What is the study of cells called?',\n          options: ['Microbiology', 'Histology', 'Cytology', 'Physiology'],\n          correctAnswer: 2,\n          selectedAnswer: null\n        }, {\n          text: 'What is the typical size range of most plant and animal cells?',\n          options: ['0.1-1 micrometers', '1-100 micrometers', '100-1000 micrometers', '1-10 millimeters'],\n          correctAnswer: 1,\n          selectedAnswer: null\n        }, {\n          text: 'What encloses the cytoplasm in a cell?',\n          options: ['Cell wall', 'Nucleus', 'Membrane', 'Ribosome'],\n          correctAnswer: 2,\n          selectedAnswer: null\n        }, {\n          text: 'Cells are often referred to as the:',\n          options: ['Essence of life', 'Building blocks of life', 'Foundation of organisms', 'Microscopic life'],\n          correctAnswer: 1,\n          selectedAnswer: null\n        }];\n      }, 1500);\n    };\n    const checkQuizAnswers = () => {\n      let correctCount = 0;\n      quizQuestions.value.forEach(question => {\n        if (question.selectedAnswer === question.correctAnswer) {\n          correctCount++;\n        }\n      });\n      alert(`You got ${correctCount} out of ${quizQuestions.value.length} questions correct!`);\n    };\n    const resetQuiz = () => {\n      quizQuestions.value.forEach(question => {\n        question.selectedAnswer = null;\n      });\n    };\n    return {\n      note,\n      isLoading,\n      showExportOptions,\n      quizQuestions,\n      editNote,\n      exportNote,\n      generateQuiz,\n      checkQuizAnswers,\n      resetQuiz\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useStore","useRouter","useRoute","name","setup","store","router","route","note","isLoading","showExportOptions","quizQuestions","noteId","parseInt","params","id","setTimeout","value","title","lastEdited","originalText","summary","keywords","error","console","editNote","push","exportNote","format","log","alert","toUpperCase","generateQuiz","text","options","correctAnswer","selectedAnswer","checkQuizAnswers","correctCount","forEach","question","length","resetQuiz"],"sources":["C:\\laragon\\www\\smartscribe-newnew\\src\\views\\NoteDetailView.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col bg-gray-900 text-white\">\n    <!-- Header (same as other pages) -->\n    <header class=\"p-4 bg-gray-800 flex justify-between items-center\">\n      <div class=\"text-xl font-bold\">SmartScribe</div>\n      <div class=\"flex items-center space-x-4\">\n        <button class=\"text-gray-400 hover:text-white\">\n          <font-awesome-icon :icon=\"['fas', 'bell']\" />\n        </button>\n        <div class=\"w-8 h-8 bg-gray-600 rounded-full\"></div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <div class=\"flex flex-grow\">\n      <!-- Sidebar (same as other pages) -->\n      <aside class=\"w-64 bg-gray-800 p-4\">\n        <nav>\n          <ul class=\"space-y-2\">\n            <li>\n              <router-link to=\"/dashboard\" class=\"flex items-center space-x-2 p-2 rounded-md hover:bg-gray-700\">\n                <font-awesome-icon :icon=\"['fas', 'home']\" />\n                <span>Dashboard</span>\n              </router-link>\n            </li>\n            <li>\n              <router-link to=\"/notes\" class=\"flex items-center space-x-2 p-2 rounded-md bg-gray-700\">\n                <font-awesome-icon :icon=\"['fas', 'book']\" />\n                <span>My Notes</span>\n              </router-link>\n            </li>\n            <li>\n              <router-link to=\"/progress\" class=\"flex items-center space-x-2 p-2 rounded-md hover:bg-gray-700\">\n                <font-awesome-icon :icon=\"['fas', 'chart-line']\" />\n                <span>Progress</span>\n              </router-link>\n            </li>\n            <li>\n              <router-link to=\"/settings\" class=\"flex items-center space-x-2 p-2 rounded-md hover:bg-gray-700\">\n                <font-awesome-icon :icon=\"['fas', 'cog']\" />\n                <span>Settings</span>\n              </router-link>\n            </li>\n          </ul>\n        </nav>\n      </aside>\n\n      <!-- Note Detail Main Content -->\n      <main class=\"flex-grow p-6\">\n        <div v-if=\"isLoading\" class=\"flex justify-center items-center h-full\">\n          <font-awesome-icon :icon=\"['fas', 'spinner']\" spin class=\"text-4xl text-blue-500\" />\n        </div>\n        \n        <div v-else-if=\"note\">\n          <div class=\"flex justify-between items-center mb-6\">\n            <div>\n              <h1 class=\"text-2xl font-bold\">{{ note.title }}</h1>\n              <p class=\"text-gray-400 text-sm\">Last edited: {{ note.lastEdited }}</p>\n            </div>\n            <div class=\"flex space-x-3\">\n              <button @click=\"editNote\" class=\"px-4 py-2 bg-blue-600 rounded-md hover:bg-blue-700 transition\">\n                <font-awesome-icon :icon=\"['fas', 'edit']\" class=\"mr-2\" /> Edit\n              </button>\n              <button @click=\"showExportOptions = !showExportOptions\" class=\"px-4 py-2 bg-gray-700 rounded-md hover:bg-gray-600 transition relative\">\n                <font-awesome-icon :icon=\"['fas', 'file-export']\" class=\"mr-2\" /> Export\n                \n                <!-- Export Options Dropdown -->\n                <div v-if=\"showExportOptions\" class=\"absolute right-0 mt-2 w-48 bg-gray-800 rounded-md shadow-lg py-1 z-10\">\n                  <button @click=\"exportNote('pdf')\" class=\"block w-full text-left px-4 py-2 hover:bg-gray-700\">\n                    <font-awesome-icon :icon=\"['fas', 'file-pdf']\" class=\"mr-2\" /> Export as PDF\n                  </button>\n                  <button @click=\"exportNote('word')\" class=\"block w-full text-left px-4 py-2 hover:bg-gray-700\">\n                    <font-awesome-icon :icon=\"['fas', 'file-word']\" class=\"mr-2\" /> Export as Word\n                  </button>\n                  <button @click=\"exportNote('text')\" class=\"block w-full text-left px-4 py-2 hover:bg-gray-700\">\n                    <font-awesome-icon :icon=\"['fas', 'file-alt']\" class=\"mr-2\" /> Export as Text\n                  </button>\n                </div>\n              </button>\n            </div>\n          </div>\n\n          <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n            <!-- Original Text -->\n            <div class=\"bg-gray-800 rounded-lg p-6\">\n              <h2 class=\"text-lg font-semibold mb-4\">Original Text</h2>\n              <div class=\"bg-gray-700 rounded-lg p-4 text-gray-200 h-96 overflow-y-auto\">\n                {{ note.originalText }}\n              </div>\n            </div>\n\n            <!-- AI Summary -->\n            <div class=\"bg-gray-800 rounded-lg p-6\">\n              <h2 class=\"text-lg font-semibold mb-4\">AI Summary</h2>\n              <div class=\"bg-gray-700 rounded-lg p-4 text-gray-200 h-96 overflow-y-auto\">\n                {{ note.summary }}\n              </div>\n            </div>\n          </div>\n\n          <!-- Keywords and Tags -->\n          <div class=\"bg-gray-800 rounded-lg p-6 mb-6\">\n            <h2 class=\"text-lg font-semibold mb-4\">Keywords & Tags</h2>\n            <div class=\"flex flex-wrap gap-2\">\n              <span \n                v-for=\"(keyword, index) in note.keywords\" \n                :key=\"`keyword-${index}`\"\n                class=\"px-3 py-1 bg-blue-600 rounded-full text-sm\"\n              >\n                {{ keyword }}\n              </span>\n            </div>\n          </div>\n\n          <!-- Quiz Section -->\n          <div class=\"bg-gray-800 rounded-lg p-6\">\n            <div class=\"flex justify-between items-center mb-4\">\n              <h2 class=\"text-lg font-semibold\">Study Quiz</h2>\n              <button @click=\"generateQuiz\" class=\"px-3 py-1 bg-blue-600 rounded text-sm hover:bg-blue-700 transition\">\n                <font-awesome-icon :icon=\"['fas', 'sync-alt']\" class=\"mr-1\" /> Generate New Quiz\n              </button>\n            </div>\n            \n            <div v-if=\"quizQuestions.length > 0\" class=\"space-y-4\">\n              <div v-for=\"(question, qIndex) in quizQuestions\" :key=\"`question-${qIndex}`\" class=\"bg-gray-700 rounded-lg p-4\">\n                <p class=\"font-medium mb-2\">{{ qIndex + 1 }}. {{ question.text }}</p>\n                <div class=\"space-y-2 ml-4\">\n                  <div \n                    v-for=\"(option, oIndex) in question.options\" \n                    :key=\"`option-${qIndex}-${oIndex}`\"\n                    class=\"flex items-center space-x-2\"\n                  >\n                    <input \n                      type=\"radio\" \n                      :id=\"`q${qIndex}-o${oIndex}`\" \n                      :name=\"`question-${qIndex}`\" \n                      :value=\"oIndex\"\n                      v-model=\"question.selectedAnswer\"\n                      class=\"text-blue-600\"\n                    />\n                    <label :for=\"`q${qIndex}-o${oIndex}`\">{{ option }}</label>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"flex justify-between\">\n                <button @click=\"checkQuizAnswers\" class=\"px-4 py-2 bg-green-600 rounded-md hover:bg-green-700 transition\">\n                  Check Answers\n                </button>\n                <button @click=\"resetQuiz\" class=\"px-4 py-2 bg-gray-700 rounded-md hover:bg-gray-600 transition\">\n                  Reset\n                </button>\n              </div>\n            </div>\n            \n            <div v-else class=\"text-center py-8 text-gray-400\">\n              <p>No quiz questions generated yet. Click \"Generate New Quiz\" to create questions based on your notes.</p>\n            </div>\n          </div>\n        </div>\n        \n        <div v-else class=\"flex flex-col items-center justify-center h-full\">\n          <font-awesome-icon :icon=\"['fas', 'exclamation-circle']\" class=\"text-4xl text-gray-400 mb-4\" />\n          <h2 class=\"text-xl font-medium mb-2\">Note Not Found</h2>\n          <p class=\"text-gray-400 mb-4\">The note you're looking for doesn't exist or has been deleted.</p>\n          <router-link to=\"/notes\" class=\"px-4 py-2 bg-blue-600 rounded-md hover:bg-blue-700 transition\">\n            Back to Notes\n          </router-link>\n        </div>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\n\nexport default {\n  name: 'NoteDetailView',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    \n    const note = ref(null);\n    const isLoading = ref(true);\n    const showExportOptions = ref(false);\n    const quizQuestions = ref([]);\n    \n    onMounted(async () => {\n      try {\n        const noteId = parseInt(route.params.id);\n        \n        // In a real app, we would fetch the note from the store\n        // await store.dispatch('notes/fetchNote', noteId);\n        // note.value = store.getters['notes/getCurrentNote'];\n        \n        // For now, we'll use mock data\n        setTimeout(() => {\n          note.value = {\n            id: noteId,\n            title: 'Biology Notes - Chapter 5',\n            lastEdited: 'May 14, 2025 at 3:45 PM',\n            originalText: 'The cell is the basic structural, functional, and biological unit of all known organisms. Cells are the smallest units of life, and hence are often referred to as the \"building blocks of life\". The study of cells is called cell biology, cellular biology, or cytology.\\n\\nCells consist of cytoplasm enclosed within a membrane, which contains many biomolecules such as proteins and nucleic acids. Most plant and animal cells are only visible under a light microscope, with dimensions between 1 and 100 micrometres. Cells were discovered by Robert Hooke in 1665, who named them for their resemblance to cells inhabited by Christian monks in a monastery.',\n            summary: 'Cells are the fundamental units of life, discovered by Robert Hooke in 1665. They are microscopic structures containing cytoplasm, proteins, and nucleic acids enclosed within a membrane. Cell biology (cytology) is the scientific study of cells. Cells range from 1-100 micrometers in size and are only visible under microscopes.',\n            keywords: ['Cell', 'Biology', 'Cytology', 'Robert Hooke', 'Microscopic']\n          };\n          isLoading.value = false;\n        }, 1000);\n      } catch (error) {\n        console.error('Error loading note:', error);\n        isLoading.value = false;\n      }\n    });\n\n    const editNote = () => {\n      if (note.value) {\n        router.push(`/notes/edit?id=${note.value.id}`);\n      }\n    };\n\n    const exportNote = (format) => {\n      console.log(`Exporting note as ${format}...`);\n      showExportOptions.value = false;\n      \n      // In a real app, this would call the export API\n      // For now, we'll just show an alert\n      setTimeout(() => {\n        alert(`Note exported as ${format.toUpperCase()} successfully!`);\n      }, 1000);\n    };\n\n    const generateQuiz = () => {\n      console.log('Generating quiz...');\n      \n      // In a real app, this would call the GPT API\n      // For now, we'll use mock data\n      setTimeout(() => {\n        quizQuestions.value = [\n          {\n            text: 'Who discovered cells in 1665?',\n            options: ['Robert Hooke', 'Anton van Leeuwenhoek', 'Matthias Schleiden', 'Theodor Schwann'],\n            correctAnswer: 0,\n            selectedAnswer: null\n          },\n          {\n            text: 'What is the study of cells called?',\n            options: ['Microbiology', 'Histology', 'Cytology', 'Physiology'],\n            correctAnswer: 2,\n            selectedAnswer: null\n          },\n          {\n            text: 'What is the typical size range of most plant and animal cells?',\n            options: ['0.1-1 micrometers', '1-100 micrometers', '100-1000 micrometers', '1-10 millimeters'],\n            correctAnswer: 1,\n            selectedAnswer: null\n          },\n          {\n            text: 'What encloses the cytoplasm in a cell?',\n            options: ['Cell wall', 'Nucleus', 'Membrane', 'Ribosome'],\n            correctAnswer: 2,\n            selectedAnswer: null\n          },\n          {\n            text: 'Cells are often referred to as the:',\n            options: ['Essence of life', 'Building blocks of life', 'Foundation of organisms', 'Microscopic life'],\n            correctAnswer: 1,\n            selectedAnswer: null\n          }\n        ];\n      }, 1500);\n    };\n\n    const checkQuizAnswers = () => {\n      let correctCount = 0;\n      quizQuestions.value.forEach(question => {\n        if (question.selectedAnswer === question.correctAnswer) {\n          correctCount++;\n        }\n      });\n\n      alert(`You got ${correctCount} out of ${quizQuestions.value.length} questions correct!`);\n    };\n\n    const resetQuiz = () => {\n      quizQuestions.value.forEach(question => {\n        question.selectedAnswer = null;\n      });\n    };\n\n    return {\n      note,\n      isLoading,\n      showExportOptions,\n      quizQuestions,\n      editNote,\n      exportNote,\n      generateQuiz,\n      checkQuizAnswers,\n      resetQuiz\n    };\n  }\n}\n</script>"],"mappings":";;;AA+KA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAEhD,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC,CAAC;IACxB,MAAMM,MAAK,GAAIL,SAAS,CAAC,CAAC;IAC1B,MAAMM,KAAI,GAAIL,QAAQ,CAAC,CAAC;IAExB,MAAMM,IAAG,GAAIV,GAAG,CAAC,IAAI,CAAC;IACtB,MAAMW,SAAQ,GAAIX,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMY,iBAAgB,GAAIZ,GAAG,CAAC,KAAK,CAAC;IACpC,MAAMa,aAAY,GAAIb,GAAG,CAAC,EAAE,CAAC;IAE7BC,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMa,MAAK,GAAIC,QAAQ,CAACN,KAAK,CAACO,MAAM,CAACC,EAAE,CAAC;;QAExC;QACA;QACA;;QAEA;QACAC,UAAU,CAAC,MAAM;UACfR,IAAI,CAACS,KAAI,GAAI;YACXF,EAAE,EAAEH,MAAM;YACVM,KAAK,EAAE,2BAA2B;YAClCC,UAAU,EAAE,yBAAyB;YACrCC,YAAY,EAAE,4oBAA4oB;YAC1pBC,OAAO,EAAE,yUAAyU;YAClVC,QAAQ,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa;UACzE,CAAC;UACDb,SAAS,CAACQ,KAAI,GAAI,KAAK;QACzB,CAAC,EAAE,IAAI,CAAC;MACV,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3Cd,SAAS,CAACQ,KAAI,GAAI,KAAK;MACzB;IACF,CAAC,CAAC;IAEF,MAAMQ,QAAO,GAAIA,CAAA,KAAM;MACrB,IAAIjB,IAAI,CAACS,KAAK,EAAE;QACdX,MAAM,CAACoB,IAAI,CAAC,kBAAkBlB,IAAI,CAACS,KAAK,CAACF,EAAE,EAAE,CAAC;MAChD;IACF,CAAC;IAED,MAAMY,UAAS,GAAKC,MAAM,IAAK;MAC7BJ,OAAO,CAACK,GAAG,CAAC,qBAAqBD,MAAM,KAAK,CAAC;MAC7ClB,iBAAiB,CAACO,KAAI,GAAI,KAAK;;MAE/B;MACA;MACAD,UAAU,CAAC,MAAM;QACfc,KAAK,CAAC,oBAAoBF,MAAM,CAACG,WAAW,CAAC,CAAC,gBAAgB,CAAC;MACjE,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAED,MAAMC,YAAW,GAAIA,CAAA,KAAM;MACzBR,OAAO,CAACK,GAAG,CAAC,oBAAoB,CAAC;;MAEjC;MACA;MACAb,UAAU,CAAC,MAAM;QACfL,aAAa,CAACM,KAAI,GAAI,CACpB;UACEgB,IAAI,EAAE,+BAA+B;UACrCC,OAAO,EAAE,CAAC,cAAc,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,iBAAiB,CAAC;UAC3FC,aAAa,EAAE,CAAC;UAChBC,cAAc,EAAE;QAClB,CAAC,EACD;UACEH,IAAI,EAAE,oCAAoC;UAC1CC,OAAO,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,CAAC;UAChEC,aAAa,EAAE,CAAC;UAChBC,cAAc,EAAE;QAClB,CAAC,EACD;UACEH,IAAI,EAAE,gEAAgE;UACtEC,OAAO,EAAE,CAAC,mBAAmB,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,kBAAkB,CAAC;UAC/FC,aAAa,EAAE,CAAC;UAChBC,cAAc,EAAE;QAClB,CAAC,EACD;UACEH,IAAI,EAAE,wCAAwC;UAC9CC,OAAO,EAAE,CAAC,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;UACzDC,aAAa,EAAE,CAAC;UAChBC,cAAc,EAAE;QAClB,CAAC,EACD;UACEH,IAAI,EAAE,qCAAqC;UAC3CC,OAAO,EAAE,CAAC,iBAAiB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,kBAAkB,CAAC;UACtGC,aAAa,EAAE,CAAC;UAChBC,cAAc,EAAE;QAClB,EACD;MACH,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAED,MAAMC,gBAAe,GAAIA,CAAA,KAAM;MAC7B,IAAIC,YAAW,GAAI,CAAC;MACpB3B,aAAa,CAACM,KAAK,CAACsB,OAAO,CAACC,QAAO,IAAK;QACtC,IAAIA,QAAQ,CAACJ,cAAa,KAAMI,QAAQ,CAACL,aAAa,EAAE;UACtDG,YAAY,EAAE;QAChB;MACF,CAAC,CAAC;MAEFR,KAAK,CAAC,WAAWQ,YAAY,WAAW3B,aAAa,CAACM,KAAK,CAACwB,MAAM,qBAAqB,CAAC;IAC1F,CAAC;IAED,MAAMC,SAAQ,GAAIA,CAAA,KAAM;MACtB/B,aAAa,CAACM,KAAK,CAACsB,OAAO,CAACC,QAAO,IAAK;QACtCA,QAAQ,CAACJ,cAAa,GAAI,IAAI;MAChC,CAAC,CAAC;IACJ,CAAC;IAED,OAAO;MACL5B,IAAI;MACJC,SAAS;MACTC,iBAAiB;MACjBC,aAAa;MACbc,QAAQ;MACRE,UAAU;MACVK,YAAY;MACZK,gBAAgB;MAChBK;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}