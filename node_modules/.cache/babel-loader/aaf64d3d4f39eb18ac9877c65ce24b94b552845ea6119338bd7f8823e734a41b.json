{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\n// import { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\n// import { icon } from '@fortawesome/fontawesome-svg-core';\n\nexport default {\n  name: 'SignupView',\n  setup() {\n    // const store = useStore();\n    const router = useRouter();\n    const name = ref('');\n    const email = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const isLoading = ref(false);\n    const errorMessage = ref('');\n    const showSuccessModal = ref(false);\n    const passwordInput = ref(null);\n    const confirmPasswordInput = ref(null);\n    const redirectToLogin = () => {\n      showSuccessModal.value = false;\n      router.push('/login');\n    };\n    const togglePasswordField = inputRef => {\n      const inputElement = inputRef === 'passwordInput' ? passwordInput.value : confirmPasswordInput.value;\n      const button = inputElement.nextElementSibling;\n      const visibleIcon = button.querySelector('.password-visible-icon');\n      const hiddenIcon = button.querySelector('.password-hidden-icon');\n      if (inputElement.type === 'password') {\n        inputElement.type = 'text';\n        visibleIcon.classList.remove('hidden');\n        hiddenIcon.classList.add('hidden');\n      } else {\n        inputElement.type = 'password';\n        visibleIcon.classList.add('hidden');\n        hiddenIcon.classList.remove('hidden');\n      }\n    };\n    const handleSignup = async () => {\n      try {\n        // Validate passwords match\n        if (password.value !== confirmPassword.value) {\n          errorMessage.value = 'Passwords do not match';\n          return;\n        }\n        isLoading.value = true;\n        errorMessage.value = '';\n\n        // await store.dispatch('auth/register', {\n        //  name: name.value,\n        //  email: email.value,\n        //  password: password.value\n        //});\n        let data = await axios.post('http://localhost:3000/api/auth/register', {\n          name: name.value,\n          email: email.value,\n          password: password.value\n        });\n        if (data) {\n          localStorage.setItem(\"user\", JSON.stringify(data.data.user));\n          showSuccessModal.value = true;\n        }\n      } catch (error) {\n        errorMessage.value = error.message || 'Failed to create account. Please try again.';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    return {\n      name,\n      email,\n      password,\n      confirmPassword,\n      isLoading,\n      errorMessage,\n      handleSignup,\n      passwordInput,\n      confirmPasswordInput,\n      togglePasswordField,\n      redirectToLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","name","setup","router","email","password","confirmPassword","isLoading","errorMessage","showSuccessModal","passwordInput","confirmPasswordInput","redirectToLogin","value","push","togglePasswordField","inputRef","inputElement","button","nextElementSibling","visibleIcon","querySelector","hiddenIcon","type","classList","remove","add","handleSignup","data","post","localStorage","setItem","JSON","stringify","user","error","message"],"sources":["C:\\laragon\\www\\smartscribe-newnew\\src\\views\\SignupView.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col bg-gray-900 text-white\">\n    <!-- Header -->\n    <header class=\"p-4 flex justify-between items-center\">\n      <router-link to=\"/\" class=\"text-xl font-bold\">SmartScribe</router-link>\n      <div class=\"space-x-2\">\n        <router-link to=\"/login\" class=\"px-4 py-2 border border-white rounded-md hover:bg-gray-800 transition\">Sign In</router-link>\n        <router-link to=\"/contact\" class=\"px-4 py-2 bg-white text-gray-900 rounded-md hover:bg-gray-200 transition\">Contact</router-link>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"flex-grow flex items-center justify-center p-4\">\n      <div class=\"bg-gray-800 rounded-lg p-8 w-full max-w-md\">\n        <div class=\"flex justify-center mb-4\">\n          <div class=\"w-16 h-16 bg-white rounded-full flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fas', 'user-plus']\" class=\"text-gray-900 text-2xl\" />\n          </div>\n        </div>\n        \n        <h2 class=\"text-xl font-semibold text-center mb-1\">Create Your Account</h2>\n        <p class=\"text-sm text-center text-gray-400 mb-6\">Sign up for SmartScribe to start digitizing your notes</p>\n        \n        <form @submit.prevent=\"handleSignup\">\n          <div class=\"mb-4\">\n            <input \n              type='text' \n              v-model=\"name\" \n              placeholder=\"Full Name\" \n              class=\"w-full p-3 rounded bg-gray-700 border border-gray-600 focus:outline-none focus:border-blue-500\"\n              required\n            />\n          </div>\n          \n          <div class=\"mb-4\">\n            <input \n              type=\"email\" \n              v-model=\"email\" \n              placeholder=\"Email Address\" \n              class=\"w-full p-3 rounded bg-gray-700 border border-gray-600 focus:outline-none focus:border-blue-500\"\n              required\n            />\n          </div>\n          \n          <div class=\"mb-4 relative\">\n            <input \n              ref=\"passwordInput\"\n              type=\"password\" \n              v-model=\"password\" \n              placeholder=\"Password\" \n              class=\"w-full p-3 rounded bg-gray-700 border border-gray-600 focus:outline-none focus:border-blue-500 pr-10\"\n              required\n            />\n            <button\n              type=\"button\"\n              @click=\"togglePasswordField('passwordInput')\"\n              class=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-white\"\n            >\n              <font-awesome-icon :icon=\"['fas', 'eye']\" class=\"password-visible-icon hidden\" />\n              <font-awesome-icon :icon=\"['fas', 'eye-slash']\" class=\"password-hidden-icon\" />\n            </button>\n          </div>\n          \n          <div class=\"mb-6 relative\">\n            <input \n              ref=\"confirmPasswordInput\"\n              type=\"password\" \n              v-model=\"confirmPassword\" \n              placeholder=\"Confirm Password\" \n              class=\"w-full p-3 rounded bg-gray-700 border border-gray-600 focus:outline-none focus:border-blue-500 pr-10\"\n              required\n            />\n            <button\n              type=\"button\"\n              @click=\"togglePasswordField('confirmPasswordInput')\"\n              class=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-white\"\n            >\n              <font-awesome-icon :icon=\"['fas', 'eye']\" class=\"password-visible-icon hidden\" />\n              <font-awesome-icon :icon=\"['fas', 'eye-slash']\" class=\"password-hidden-icon\" />\n            </button>\n          </div>\n          \n          <button \n            type=\"submit\" \n            class=\"w-full p-3 bg-white text-gray-900 rounded font-medium hover:bg-gray-200 transition\"\n            :disabled=\"isLoading\"\n          >\n            <span v-if=\"isLoading\">\n              <font-awesome-icon :icon=\"['fas', 'spinner']\" spin />\n              Creating account...\n            </span>\n            <span v-else>Create Account</span>\n          </button>\n        </form>\n\n        <div class=\"flex justify-center space-x-4 my-6\">\n          <button class=\"w-8 h-8 rounded-full bg-blue-600 flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fab', 'facebook-f']\" />\n          </button>\n          <button class=\"w-8 h-8 rounded-full bg-white flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fab', 'google']\" class=\"text-gray-900\" />\n          </button>\n          <button class=\"w-8 h-8 rounded-full bg-white flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fab', 'apple']\" class=\"text-gray-900\" />\n          </button>\n        </div>\n        \n        <div class=\"text-center text-sm\">\n          <p class=\"text-gray-400\">\n            Already have an account? \n            <router-link to=\"/login\" class=\"text-white cursor-pointer hover:underline\">Sign In</router-link>\n          </p>\n        </div>\n      </div>\n    </main>\n\n    <!-- Success Modal -->\n    <div v-if=\"showSuccessModal\" class=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\n      <div class=\"bg-white text-gray-900 rounded-lg shadow-lg p-6 w-80 text-center\">\n        <h2 class=\"text-xl font-semibold mb-2\">Account Created!</h2>\n        <p class=\"mb-4\">Your account was created successfully. You can now log in.</p>\n        <button\n          @click=\"redirectToLogin\"\n          class=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\"\n          >\n          Go to Login\n        </button>\n      </div>\n    </div>\n\n\n    <!-- Footer -->\n    <footer class=\"p-4 bg-gray-800 text-gray-400 flex justify-between items-center text-sm\">\n      <div class=\"flex space-x-4\">\n        <a href=\"#\" class=\"hover:text-white\">Docs</a>\n        <a href=\"#\" class=\"hover:text-white\">Guides</a>\n        <a href=\"#\" class=\"hover:text-white\">Help</a>\n        <a href=\"#\" class=\"hover:text-white\">Contact</a>\n      </div>\n      <div>Â© 2025 SmartScribe Inc.</div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n// import { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\n// import { icon } from '@fortawesome/fontawesome-svg-core';\n\nexport default {\n  name: 'SignupView',\n  setup() {\n    // const store = useStore();\n    const router = useRouter();\n    \n    const name = ref('');\n    const email = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const isLoading = ref(false);\n    const errorMessage = ref('');\n    const showSuccessModal = ref(false);\n\n    const passwordInput = ref(null);\n    const confirmPasswordInput = ref(null);\n\n    const redirectToLogin = () => {\n      showSuccessModal.value = false;\n      router.push('/login')\n    }\n\n    const togglePasswordField = (inputRef) => {\n      const inputElement = inputRef === 'passwordInput' ? passwordInput.value : confirmPasswordInput.value;\n      const button = inputElement.nextElementSibling;\n      const visibleIcon = button.querySelector('.password-visible-icon');\n      const hiddenIcon = button.querySelector('.password-hidden-icon');\n      \n      if (inputElement.type === 'password') {\n        inputElement.type = 'text';\n        visibleIcon.classList.remove('hidden');\n        hiddenIcon.classList.add('hidden');\n      } else {\n        inputElement.type = 'password';\n        visibleIcon.classList.add('hidden');\n        hiddenIcon.classList.remove('hidden');\n      }\n    };\n\n    const handleSignup = async () => {\n      try {\n        // Validate passwords match\n        if (password.value !== confirmPassword.value) {\n          errorMessage.value = 'Passwords do not match';\n          return;\n        }\n        \n        isLoading.value = true;\n        errorMessage.value = '';\n        \n        // await store.dispatch('auth/register', {\n        //  name: name.value,\n        //  email: email.value,\n        //  password: password.value\n        //});\n        let data = await axios.post('http://localhost:3000/api/auth/register', {\n          name: name.value,\n          email: email.value,\n          password: password.value\n        });\n\n        if (data) {\n          localStorage.setItem(\"user\", JSON.stringify(data.data.user));\n          showSuccessModal.value = true;\n        }\n        \n      } catch (error) {\n        errorMessage.value = error.message || 'Failed to create account. Please try again.';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    return {\n      name,\n      email,\n      password,\n      confirmPassword,\n      isLoading,\n      errorMessage,\n      handleSignup,\n      passwordInput,\n      confirmPasswordInput,\n      togglePasswordField,\n      redirectToLogin\n    };\n  }\n}\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}