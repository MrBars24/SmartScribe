{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'ProgressView',\n  setup() {\n    const store = useStore();\n    const stats = ref({\n      totalNotes: 15,\n      notesThisWeek: 3,\n      studyHours: 24,\n      studyHoursThisWeek: 6,\n      quizAverage: 85,\n      quizzesCompleted: 8\n    });\n    const weeklyActivity = ref([{\n      name: 'Mon',\n      activity: 0.3\n    }, {\n      name: 'Tue',\n      activity: 0.5\n    }, {\n      name: 'Wed',\n      activity: 0.2\n    }, {\n      name: 'Thu',\n      activity: 0.8\n    }, {\n      name: 'Fri',\n      activity: 0.6\n    }, {\n      name: 'Sat',\n      activity: 0.4\n    }, {\n      name: 'Sun',\n      activity: 0.1\n    }]);\n    const subjects = ref([{\n      name: 'Biology',\n      percentage: 35,\n      color: 'bg-green-500'\n    }, {\n      name: 'History',\n      percentage: 25,\n      color: 'bg-blue-500'\n    }, {\n      name: 'Mathematics',\n      percentage: 20,\n      color: 'bg-yellow-500'\n    }, {\n      name: 'Physics',\n      percentage: 15,\n      color: 'bg-purple-500'\n    }, {\n      name: 'Literature',\n      percentage: 5,\n      color: 'bg-red-500'\n    }]);\n    const recentActivity = ref([{\n      title: 'Scanned Biology Notes',\n      time: '2 hours ago',\n      icon: ['fas', 'camera'],\n      iconColor: 'bg-blue-600'\n    }, {\n      title: 'Completed History Quiz',\n      time: 'Yesterday at 4:30 PM',\n      icon: ['fas', 'check-circle'],\n      iconColor: 'bg-green-600'\n    }, {\n      title: 'Generated Summary for Physics',\n      time: 'Yesterday at 2:15 PM',\n      icon: ['fas', 'file-alt'],\n      iconColor: 'bg-yellow-600'\n    }, {\n      title: 'Created Study Goal',\n      time: '3 days ago',\n      icon: ['fas', 'bullseye'],\n      iconColor: 'bg-purple-600'\n    }]);\n    const goals = ref([{\n      title: 'Complete Biology Chapter 5-8',\n      dueDate: 'Due in 5 days',\n      progress: 65\n    }, {\n      title: 'Prepare for History Midterm',\n      dueDate: 'Due in 2 weeks',\n      progress: 30\n    }, {\n      title: 'Review Math Formulas',\n      dueDate: 'Due tomorrow',\n      progress: 90\n    }]);\n    const showAddGoalForm = ref(false);\n    const newGoal = ref({\n      title: '',\n      dueDate: ''\n    });\n    onMounted(async () => {\n      try {\n        // In a real app, we would fetch progress data from the store\n        // await store.dispatch('progress/fetchStats');\n        // await store.dispatch('progress/fetchActivity');\n        // stats.value = store.getters['progress/getStats'];\n        // weeklyActivity.value = store.getters['progress/getWeeklyActivity'];\n        // subjects.value = store.getters['progress/getSubjects'];\n        // recentActivity.value = store.getters['progress/getRecentActivity'];\n        // goals.value = store.getters['progress/getGoals'];\n      } catch (error) {\n        console.error('Error loading progress data:', error);\n      }\n    });\n    const addGoal = async () => {\n      try {\n        if (!newGoal.value.title.trim() || !newGoal.value.dueDate) {\n          alert('Please fill in all fields');\n          return;\n        }\n\n        // Format the due date\n        const dueDate = new Date(newGoal.value.dueDate);\n        const now = new Date();\n        const diffTime = dueDate - now;\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        let dueDateText;\n        if (diffDays === 0) {\n          dueDateText = 'Due today';\n        } else if (diffDays === 1) {\n          dueDateText = 'Due tomorrow';\n        } else if (diffDays < 7) {\n          dueDateText = `Due in ${diffDays} days`;\n        } else if (diffDays < 14) {\n          dueDateText = 'Due in 1 week';\n        } else {\n          dueDateText = `Due in ${Math.floor(diffDays / 7)} weeks`;\n        }\n\n        // In a real app, we would dispatch to the store\n        // await store.dispatch('progress/addGoal', {\n        //   title: newGoal.value.title,\n        //   dueDate: dueDateText,\n        //   progress: 0\n        // });\n\n        // For now, we'll just add it to our local array\n        goals.value.push({\n          title: newGoal.value.title,\n          dueDate: dueDateText,\n          progress: 0\n        });\n\n        // Reset form\n        newGoal.value = {\n          title: '',\n          dueDate: ''\n        };\n        showAddGoalForm.value = false;\n      } catch (error) {\n        console.error('Error adding goal:', error);\n        alert('Failed to add goal. Please try again.');\n      }\n    };\n    return {\n      stats,\n      weeklyActivity,\n      subjects,\n      recentActivity,\n      goals,\n      showAddGoalForm,\n      newGoal,\n      addGoal\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useStore","name","setup","store","stats","totalNotes","notesThisWeek","studyHours","studyHoursThisWeek","quizAverage","quizzesCompleted","weeklyActivity","activity","subjects","percentage","color","recentActivity","title","time","icon","iconColor","goals","dueDate","progress","showAddGoalForm","newGoal","error","console","addGoal","value","trim","alert","Date","now","diffTime","diffDays","Math","ceil","dueDateText","floor","push"],"sources":["C:\\laragon\\www\\smartscribe-newnew\\src\\views\\SettingsView.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col bg-gray-900 text-white\">\n    <!-- Header (same as other pages) -->\n    <header class=\"p-4 bg-gray-800 flex justify-between items-center\">\n      <div class=\"text-xl font-bold\">SmartScribe</div>\n      <div class=\"flex items-center space-x-4\">\n        <button class=\"text-gray-400 hover:text-white\">\n          <font-awesome-icon :icon=\"['fas', 'bell']\" />\n        </button>\n        <div class=\"w-8 h-8 bg-gray-600 rounded-full\"></div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <div class=\"flex flex-grow\">\n      <!-- Sidebar (same as other pages) -->\n      <aside class=\"w-64 bg-gray-800 p-4\">\n        <nav>\n          <ul class=\"space-y-2\">\n            <li>\n              <router-link to=\"/dashboard\" class=\"flex items-center space-x-2 p-2 rounded-md hover:bg-gray-700\">\n                <font-awesome-icon :icon=\"['fas', 'home']\" />\n                <span>Dashboard</span>\n              </router-link>\n            </li>\n            <li>\n              <router-link to=\"/notes\" class=\"flex items-center space-x-2 p-2 rounded-md hover:bg-gray-700\">\n                <font-awesome-icon :icon=\"['fas', 'book']\" />\n                <span>My Notes</span>\n              </router-link>\n            </li>\n            <li>\n              <router-link to=\"/progress\" class=\"flex items-center space-x-2 p-2 rounded-md bg-gray-700\">\n                <font-awesome-icon :icon=\"['fas', 'chart-line']\" />\n                <span>Progress</span>\n              </router-link>\n            </li>\n            <li>\n              <router-link to=\"/settings\" class=\"flex items-center space-x-2 p-2 rounded-md hover:bg-gray-700\">\n                <font-awesome-icon :icon=\"['fas', 'cog']\" />\n                <span>Settings</span>\n              </router-link>\n            </li>\n          </ul>\n        </nav>\n      </aside>\n\n      <!-- Progress Tracker Main Content -->\n      <main class=\"flex-grow p-6\">\n        <h1 class=\"text-2xl font-bold mb-6\">Study Progress</h1>\n        \n        <!-- Overview Cards -->\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n          <div class=\"bg-gray-800 rounded-lg p-6\">\n            <div class=\"flex justify-between items-center mb-2\">\n              <h2 class=\"text-lg font-semibold\">Total Notes</h2>\n              <font-awesome-icon :icon=\"['fas', 'book']\" class=\"text-blue-500 text-xl\" />\n            </div>\n            <p class=\"text-3xl font-bold\">{{ stats.totalNotes }}</p>\n            <p class=\"text-sm text-gray-400\">{{ stats.notesThisWeek }} new this week</p>\n          </div>\n          \n          <div class=\"bg-gray-800 rounded-lg p-6\">\n            <div class=\"flex justify-between items-center mb-2\">\n              <h2 class=\"text-lg font-semibold\">Study Time</h2>\n              <font-awesome-icon :icon=\"['fas', 'clock']\" class=\"text-green-500 text-xl\" />\n            </div>\n            <p class=\"text-3xl font-bold\">{{ stats.studyHours }}h</p>\n            <p class=\"text-sm text-gray-400\">{{ stats.studyHoursThisWeek }}h this week</p>\n          </div>\n          \n          <div class=\"bg-gray-800 rounded-lg p-6\">\n            <div class=\"flex justify-between items-center mb-2\">\n              <h2 class=\"text-lg font-semibold\">Quiz Score</h2>\n              <font-awesome-icon :icon=\"['fas', 'check-circle']\" class=\"text-yellow-500 text-xl\" />\n            </div>\n            <p class=\"text-3xl font-bold\">{{ stats.quizAverage }}%</p>\n            <p class=\"text-sm text-gray-400\">{{ stats.quizzesCompleted }} quizzes completed</p>\n          </div>\n        </div>\n        \n        <!-- Weekly Activity Chart -->\n        <div class=\"bg-gray-800 rounded-lg p-6 mb-6\">\n          <h2 class=\"text-lg font-semibold mb-4\">Weekly Activity</h2>\n          <div class=\"h-64 flex items-end justify-between\">\n            <div v-for=\"(day, index) in weeklyActivity\" :key=\"index\" class=\"flex flex-col items-center w-full\">\n              <div class=\"w-full px-1\">\n                <div \n                  class=\"bg-blue-600 rounded-t\"\n                  :style=\"{ height: `${day.activity * 200}px` }\"\n                ></div>\n              </div>\n              <p class=\"text-xs mt-2 text-gray-400\">{{ day.name }}</p>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Subject Distribution -->\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          <div class=\"bg-gray-800 rounded-lg p-6\">\n            <h2 class=\"text-lg font-semibold mb-4\">Subject Distribution</h2>\n            <div class=\"space-y-4\">\n              <div v-for=\"(subject, index) in subjects\" :key=\"index\">\n                <div class=\"flex justify-between mb-1\">\n                  <span>{{ subject.name }}</span>\n                  <span>{{ subject.percentage }}%</span>\n                </div>\n                <div class=\"w-full bg-gray-700 rounded-full h-2.5\">\n                  <div \n                    class=\"h-2.5 rounded-full\" \n                    :class=\"subject.color\"\n                    :style=\"{ width: `${subject.percentage}%` }\"\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Recent Activity -->\n          <div class=\"bg-gray-800 rounded-lg p-6\">\n            <h2 class=\"text-lg font-semibold mb-4\">Recent Activity</h2>\n            <div class=\"space-y-4\">\n              <div v-for=\"(activity, index) in recentActivity\" :key=\"index\" class=\"flex items-start\">\n                <div :class=\"`${activity.iconColor} p-2 rounded-full mr-3`\">\n                  <font-awesome-icon :icon=\"activity.icon\" />\n                </div>\n                <div>\n                  <p class=\"font-medium\">{{ activity.title }}</p>\n                  <p class=\"text-sm text-gray-400\">{{ activity.time }}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Study Goals -->\n        <div class=\"bg-gray-800 rounded-lg p-6\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h2 class=\"text-lg font-semibold\">Study Goals</h2>\n            <button @click=\"showAddGoalForm = true\" class=\"px-3 py-1 bg-blue-600 rounded text-sm hover:bg-blue-700 transition\">\n              <font-awesome-icon :icon=\"['fas', 'plus']\" class=\"mr-1\" /> New Goal\n            </button>\n          </div>\n          \n          <!-- Add Goal Form -->\n          <div v-if=\"showAddGoalForm\" class=\"bg-gray-700 rounded-lg p-4 mb-4\">\n            <h3 class=\"font-medium mb-3\">Add New Goal</h3>\n            <div class=\"mb-3\">\n              <label class=\"block text-sm text-gray-400 mb-1\">Goal Title</label>\n              <input \n                v-model=\"newGoal.title\" \n                class=\"w-full p-2 bg-gray-600 rounded border border-gray-500 focus:outline-none focus:border-blue-500\"\n                placeholder=\"E.g., Complete Biology Chapter 5-8\"\n              />\n            </div>\n            <div class=\"mb-3\">\n              <label class=\"block text-sm text-gray-400 mb-1\">Due Date</label>\n              <input \n                v-model=\"newGoal.dueDate\" \n                type=\"date\" \n                class=\"w-full p-2 bg-gray-600 rounded border border-gray-500 focus:outline-none focus:border-blue-500\"\n              />\n            </div>\n            <div class=\"flex justify-end space-x-2\">\n              <button @click=\"showAddGoalForm = false\" class=\"px-3 py-1 bg-gray-600 rounded text-sm hover:bg-gray-500 transition\">\n                Cancel\n              </button>\n              <button @click=\"addGoal\" class=\"px-3 py-1 bg-blue-600 rounded text-sm hover:bg-blue-700 transition\">\n                Add Goal\n              </button>\n            </div>\n          </div>\n          \n          <div class=\"space-y-4\">\n            <div v-for=\"(goal, index) in goals\" :key=\"index\" class=\"bg-gray-700 rounded-lg p-4\">\n              <div class=\"flex justify-between items-start\">\n                <div>\n                  <h3 class=\"font-medium\">{{ goal.title }}</h3>\n                  <p class=\"text-sm text-gray-400\">{{ goal.dueDate }}</p>\n                </div>\n                <div class=\"flex space-x-2\">\n                  <button class=\"text-gray-400 hover:text-white\">\n                    <font-awesome-icon :icon=\"['fas', 'edit']\" />\n                  </button>\n                  <button class=\"text-gray-400 hover:text-white\">\n                    <font-awesome-icon :icon=\"['fas', 'trash']\" />\n                  </button>\n                </div>\n              </div>\n              \n              <div class=\"mt-3\">\n                <div class=\"flex justify-between mb-1 text-sm\">\n                  <span>Progress</span>\n                  <span>{{ goal.progress }}%</span>\n                </div>\n                <div class=\"w-full bg-gray-600 rounded-full h-2\">\n                  <div \n                    class=\"h-2 rounded-full bg-green-500\" \n                    :style=\"{ width: `${goal.progress}%` }\"\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useStore } from 'vuex';\n\nexport default {\n  name: 'ProgressView',\n  setup() {\n    const store = useStore();\n    \n    const stats = ref({\n      totalNotes: 15,\n      notesThisWeek: 3,\n      studyHours: 24,\n      studyHoursThisWeek: 6,\n      quizAverage: 85,\n      quizzesCompleted: 8\n    });\n\n    const weeklyActivity = ref([\n      { name: 'Mon', activity: 0.3 },\n      { name: 'Tue', activity: 0.5 },\n      { name: 'Wed', activity: 0.2 },\n      { name: 'Thu', activity: 0.8 },\n      { name: 'Fri', activity: 0.6 },\n      { name: 'Sat', activity: 0.4 },\n      { name: 'Sun', activity: 0.1 }\n    ]);\n\n    const subjects = ref([\n      { name: 'Biology', percentage: 35, color: 'bg-green-500' },\n      { name: 'History', percentage: 25, color: 'bg-blue-500' },\n      { name: 'Mathematics', percentage: 20, color: 'bg-yellow-500' },\n      { name: 'Physics', percentage: 15, color: 'bg-purple-500' },\n      { name: 'Literature', percentage: 5, color: 'bg-red-500' }\n    ]);\n\n    const recentActivity = ref([\n      { \n        title: 'Scanned Biology Notes', \n        time: '2 hours ago', \n        icon: ['fas', 'camera'], \n        iconColor: 'bg-blue-600' \n      },\n      { \n        title: 'Completed History Quiz', \n        time: 'Yesterday at 4:30 PM', \n        icon: ['fas', 'check-circle'], \n        iconColor: 'bg-green-600' \n      },\n      { \n        title: 'Generated Summary for Physics', \n        time: 'Yesterday at 2:15 PM', \n        icon: ['fas', 'file-alt'], \n        iconColor: 'bg-yellow-600' \n      },\n      { \n        title: 'Created Study Goal', \n        time: '3 days ago', \n        icon: ['fas', 'bullseye'], \n        iconColor: 'bg-purple-600' \n      }\n    ]);\n\n    const goals = ref([\n      {\n        title: 'Complete Biology Chapter 5-8',\n        dueDate: 'Due in 5 days',\n        progress: 65\n      },\n      {\n        title: 'Prepare for History Midterm',\n        dueDate: 'Due in 2 weeks',\n        progress: 30\n      },\n      {\n        title: 'Review Math Formulas',\n        dueDate: 'Due tomorrow',\n        progress: 90\n      }\n    ]);\n    \n    const showAddGoalForm = ref(false);\n    const newGoal = ref({\n      title: '',\n      dueDate: ''\n    });\n\n    onMounted(async () => {\n      try {\n        // In a real app, we would fetch progress data from the store\n        // await store.dispatch('progress/fetchStats');\n        // await store.dispatch('progress/fetchActivity');\n        // stats.value = store.getters['progress/getStats'];\n        // weeklyActivity.value = store.getters['progress/getWeeklyActivity'];\n        // subjects.value = store.getters['progress/getSubjects'];\n        // recentActivity.value = store.getters['progress/getRecentActivity'];\n        // goals.value = store.getters['progress/getGoals'];\n      } catch (error) {\n        console.error('Error loading progress data:', error);\n      }\n    });\n    \n    const addGoal = async () => {\n      try {\n        if (!newGoal.value.title.trim() || !newGoal.value.dueDate) {\n          alert('Please fill in all fields');\n          return;\n        }\n        \n        // Format the due date\n        const dueDate = new Date(newGoal.value.dueDate);\n        const now = new Date();\n        const diffTime = dueDate - now;\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        \n        let dueDateText;\n        if (diffDays === 0) {\n          dueDateText = 'Due today';\n        } else if (diffDays === 1) {\n          dueDateText = 'Due tomorrow';\n        } else if (diffDays < 7) {\n          dueDateText = `Due in ${diffDays} days`;\n        } else if (diffDays < 14) {\n          dueDateText = 'Due in 1 week';\n        } else {\n          dueDateText = `Due in ${Math.floor(diffDays / 7)} weeks`;\n        }\n        \n        // In a real app, we would dispatch to the store\n        // await store.dispatch('progress/addGoal', {\n        //   title: newGoal.value.title,\n        //   dueDate: dueDateText,\n        //   progress: 0\n        // });\n        \n        // For now, we'll just add it to our local array\n        goals.value.push({\n          title: newGoal.value.title,\n          dueDate: dueDateText,\n          progress: 0\n        });\n        \n        // Reset form\n        newGoal.value = {\n          title: '',\n          dueDate: ''\n        };\n        showAddGoalForm.value = false;\n      } catch (error) {\n        console.error('Error adding goal:', error);\n        alert('Failed to add goal. Please try again.');\n      }\n    };\n\n    return {\n      stats,\n      weeklyActivity,\n      subjects,\n      recentActivity,\n      goals,\n      showAddGoalForm,\n      newGoal,\n      addGoal\n    };\n  }\n}\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}