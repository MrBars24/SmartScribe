{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\n// src/store/index.js\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    user: null,\n    notes: [],\n    isAuthenticated: false\n  },\n  getters: {\n    getUser: state => state.user,\n    getNotes: state => state.notes,\n    isAuthenticated: state => state.isAuthenticated\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n      state.isAuthenticated = !!user;\n    },\n    setNotes(state, notes) {\n      state.notes = notes;\n    },\n    addNote(state, note) {\n      state.notes.push(note);\n    },\n    updateNote(state, updatedNote) {\n      const index = state.notes.findIndex(note => note.id === updatedNote.id);\n      if (index !== -1) {\n        state.notes.splice(index, 1, updatedNote);\n      }\n    },\n    deleteNote(state, noteId) {\n      state.notes = state.notes.filter(note => note.id !== noteId);\n    }\n  },\n  actions: {\n    login({\n      commit\n    }, user) {\n      // In a real app, you would call an API here\n      commit('setUser', user);\n      return Promise.resolve(user);\n    },\n    logout({\n      commit\n    }) {\n      commit('setUser', null);\n      return Promise.resolve();\n    },\n    fetchNotes({\n      commit\n    }) {\n      // In a real app, you would call an API here\n      const notes = [{\n        id: 1,\n        title: 'Biology Notes - Chapter 5',\n        date: 'May 14, 2025',\n        summary: 'Cell structure and function. The cell is the basic unit of life.',\n        tags: ['Biology', 'Chapter 5', 'Cells']\n      }, {\n        id: 2,\n        title: 'History - World War II',\n        date: 'May 12, 2025',\n        summary: 'World War II was a global war that lasted from 1939 to 1945.',\n        tags: ['History', 'WWII']\n      }];\n      commit('setNotes', notes);\n      return Promise.resolve(notes);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","user","notes","isAuthenticated","getters","getUser","getNotes","mutations","setUser","setNotes","addNote","note","push","updateNote","updatedNote","index","findIndex","id","splice","deleteNote","noteId","filter","actions","login","commit","Promise","resolve","logout","fetchNotes","title","date","summary","tags","modules"],"sources":["C:/laragon/www/smartscribe-newnew/src/store/index.js"],"sourcesContent":["// src/store/index.js\nimport { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    user: null,\n    notes: [],\n    isAuthenticated: false\n  },\n  getters: {\n    getUser: state => state.user,\n    getNotes: state => state.notes,\n    isAuthenticated: state => state.isAuthenticated\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n      state.isAuthenticated = !!user;\n    },\n    setNotes(state, notes) {\n      state.notes = notes;\n    },\n    addNote(state, note) {\n      state.notes.push(note);\n    },\n    updateNote(state, updatedNote) {\n      const index = state.notes.findIndex(note => note.id === updatedNote.id);\n      if (index !== -1) {\n        state.notes.splice(index, 1, updatedNote);\n      }\n    },\n    deleteNote(state, noteId) {\n      state.notes = state.notes.filter(note => note.id !== noteId);\n    }\n  },\n  actions: {\n    login({ commit }, user) {\n      // In a real app, you would call an API here\n      commit('setUser', user);\n      return Promise.resolve(user);\n    },\n    logout({ commit }) {\n      commit('setUser', null);\n      return Promise.resolve();\n    },\n    fetchNotes({ commit }) {\n      // In a real app, you would call an API here\n      const notes = [\n        {\n          id: 1,\n          title: 'Biology Notes - Chapter 5',\n          date: 'May 14, 2025',\n          summary: 'Cell structure and function. The cell is the basic unit of life.',\n          tags: ['Biology', 'Chapter 5', 'Cells']\n        },\n        {\n          id: 2,\n          title: 'History - World War II',\n          date: 'May 12, 2025',\n          summary: 'World War II was a global war that lasted from 1939 to 1945.',\n          tags: ['History', 'WWII']\n        }\n      ];\n      commit('setNotes', notes);\n      return Promise.resolve(notes);\n    }\n  },\n  modules: {\n  }\n})"],"mappings":";;;AAAA;AACA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,EAAE;IACTC,eAAe,EAAE;EACnB,CAAC;EACDC,OAAO,EAAE;IACPC,OAAO,EAAEL,KAAK,IAAIA,KAAK,CAACC,IAAI;IAC5BK,QAAQ,EAAEN,KAAK,IAAIA,KAAK,CAACE,KAAK;IAC9BC,eAAe,EAAEH,KAAK,IAAIA,KAAK,CAACG;EAClC,CAAC;EACDI,SAAS,EAAE;IACTC,OAAOA,CAACR,KAAK,EAAEC,IAAI,EAAE;MACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;MACjBD,KAAK,CAACG,eAAe,GAAG,CAAC,CAACF,IAAI;IAChC,CAAC;IACDQ,QAAQA,CAACT,KAAK,EAAEE,KAAK,EAAE;MACrBF,KAAK,CAACE,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDQ,OAAOA,CAACV,KAAK,EAAEW,IAAI,EAAE;MACnBX,KAAK,CAACE,KAAK,CAACU,IAAI,CAACD,IAAI,CAAC;IACxB,CAAC;IACDE,UAAUA,CAACb,KAAK,EAAEc,WAAW,EAAE;MAC7B,MAAMC,KAAK,GAAGf,KAAK,CAACE,KAAK,CAACc,SAAS,CAACL,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKH,WAAW,CAACG,EAAE,CAAC;MACvE,IAAIF,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBf,KAAK,CAACE,KAAK,CAACgB,MAAM,CAACH,KAAK,EAAE,CAAC,EAAED,WAAW,CAAC;MAC3C;IACF,CAAC;IACDK,UAAUA,CAACnB,KAAK,EAAEoB,MAAM,EAAE;MACxBpB,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACE,KAAK,CAACmB,MAAM,CAACV,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKG,MAAM,CAAC;IAC9D;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEvB,IAAI,EAAE;MACtB;MACAuB,MAAM,CAAC,SAAS,EAAEvB,IAAI,CAAC;MACvB,OAAOwB,OAAO,CAACC,OAAO,CAACzB,IAAI,CAAC;IAC9B,CAAC;IACD0B,MAAMA,CAAC;MAAEH;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;MACvB,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B,CAAC;IACDE,UAAUA,CAAC;MAAEJ;IAAO,CAAC,EAAE;MACrB;MACA,MAAMtB,KAAK,GAAG,CACZ;QACEe,EAAE,EAAE,CAAC;QACLY,KAAK,EAAE,2BAA2B;QAClCC,IAAI,EAAE,cAAc;QACpBC,OAAO,EAAE,kEAAkE;QAC3EC,IAAI,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,OAAO;MACxC,CAAC,EACD;QACEf,EAAE,EAAE,CAAC;QACLY,KAAK,EAAE,wBAAwB;QAC/BC,IAAI,EAAE,cAAc;QACpBC,OAAO,EAAE,8DAA8D;QACvEC,IAAI,EAAE,CAAC,SAAS,EAAE,MAAM;MAC1B,CAAC,CACF;MACDR,MAAM,CAAC,UAAU,EAAEtB,KAAK,CAAC;MACzB,OAAOuB,OAAO,CAACC,OAAO,CAACxB,KAAK,CAAC;IAC/B;EACF,CAAC;EACD+B,OAAO,EAAE,CACT;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}