{"ast":null,"code":"import { computed } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'App',\n  setup() {\n    const store = useStore();\n    const isLoading = computed(() => store.getters.isAppLoading);\n    const globalError = computed(() => store.getters.getGlobalError);\n    const clearError = () => {\n      store.dispatch('clearGlobalError');\n    };\n    return {\n      isLoading,\n      globalError,\n      clearError\n    };\n  }\n};","map":{"version":3,"names":["computed","useStore","name","setup","store","isLoading","getters","isAppLoading","globalError","getGlobalError","clearError","dispatch"],"sources":["C:\\laragon\\www\\smartscribe-newnew\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- Global loading indicator -->\n    <div v-if=\"isLoading\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div class=\"bg-gray-800 p-6 rounded-lg shadow-lg flex items-center\">\n        <font-awesome-icon :icon=\"['fas', 'spinner']\" spin class=\"text-blue-500 text-2xl mr-3\" />\n        <span class=\"text-white\">Loading...</span>\n      </div>\n    </div>\n    \n    <!-- Global error alert -->\n    <div v-if=\"globalError\" class=\"fixed top-4 right-4 bg-red-600 text-white p-4 rounded-lg shadow-lg z-50 max-w-md\">\n      <div class=\"flex items-start\">\n        <div class=\"flex-grow\">\n          <h3 class=\"font-bold mb-1\">Error</h3>\n          <p>{{ globalError }}</p>\n        </div>\n        <button @click=\"clearError\" class=\"ml-4 text-white\">\n          <font-awesome-icon :icon=\"['fas', 'times']\" />\n        </button>\n      </div>\n    </div>\n    \n    <!-- Main content -->\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport { computed } from 'vue';\nimport { useStore } from 'vuex';\n\nexport default {\n  name: 'App',\n  setup() {\n    const store = useStore();\n    \n    const isLoading = computed(() => store.getters.isAppLoading);\n    const globalError = computed(() => store.getters.getGlobalError);\n    \n    const clearError = () => {\n      store.dispatch('clearGlobalError');\n    };\n    \n    return {\n      isLoading,\n      globalError,\n      clearError\n    };\n  }\n}\n</script>"],"mappings":"AA6BA,SAASA,QAAO,QAAS,KAAK;AAC9B,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IAExB,MAAMI,SAAQ,GAAIL,QAAQ,CAAC,MAAMI,KAAK,CAACE,OAAO,CAACC,YAAY,CAAC;IAC5D,MAAMC,WAAU,GAAIR,QAAQ,CAAC,MAAMI,KAAK,CAACE,OAAO,CAACG,cAAc,CAAC;IAEhE,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACvBN,KAAK,CAACO,QAAQ,CAAC,kBAAkB,CAAC;IACpC,CAAC;IAED,OAAO;MACLN,SAAS;MACTG,WAAW;MACXE;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}