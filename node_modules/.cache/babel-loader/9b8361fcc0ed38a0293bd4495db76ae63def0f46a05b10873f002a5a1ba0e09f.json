{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'LoginView',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const email = ref('');\n    const password = ref('');\n    const isLoading = ref(false);\n    const errorMessage = ref('');\n    const passwordInput = ref(null);\n    const togglePasswordField = inputRef => {\n      const inputElement = inputRef === 'passwordInput' ? passwordInput.value : confirmPasswordInput.value;\n      const button = inputElement.nextElementSibling;\n      const visibleIcon = button.querySelector('.password-visible-icon');\n      const hiddenIcon = button.querySelector('.password-hidden-icon');\n      if (inputElement.type === 'password') {\n        inputElement.type = 'text';\n        visibleIcon.classList.remove('hidden');\n        hiddenIcon.classList.add('hidden');\n      } else {\n        inputElement.type = 'password';\n        visibleIcon.classList.add('hidden');\n        hiddenIcon.classList.remove('hidden');\n      }\n    };\n    const handleLogin = async () => {\n      try {\n        isLoading.value = true;\n        errorMessage.value = '';\n        await store.dispatch('auth/login', {\n          email: email.value,\n          password: password.value\n        });\n        router.push('/dashboard');\n      } catch (error) {\n        errorMessage.value = error.message || 'Failed to login. Please try again.';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    return {\n      email,\n      password,\n      isLoading,\n      errorMessage,\n      handleLogin,\n      passwordInput,\n      togglePasswordField\n    };\n  }\n};","map":{"version":3,"names":["ref","useStore","useRouter","name","setup","store","router","email","password","isLoading","errorMessage","passwordInput","togglePasswordField","inputRef","inputElement","value","confirmPasswordInput","button","nextElementSibling","visibleIcon","querySelector","hiddenIcon","type","classList","remove","add","handleLogin","dispatch","push","error","message"],"sources":["C:\\laragon\\www\\smartscribe-newnew\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col bg-gray-900 text-white\">\n    <!-- Header -->\n    <header class=\"p-4 flex justify-between items-center\">\n      <router-link to=\"/\" class=\"text-xl font-bold\">SmartScribe</router-link>\n      <div class=\"space-x-2\">\n        <router-link to=\"/signup\" class=\"px-4 py-2 border border-white rounded-md hover:bg-gray-800 transition\">Sign Up</router-link>\n        <router-link to=\"/contact\" class=\"px-4 py-2 bg-white text-gray-900 rounded-md hover:bg-gray-200 transition\">Contact</router-link>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"flex-grow flex items-center justify-center p-4\">\n      <div class=\"bg-gray-800 rounded-lg p-8 w-full max-w-md\">\n        <div class=\"flex justify-center mb-4\">\n          <div class=\"w-16 h-16 bg-white rounded-full flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fas', 'book']\" class=\"text-gray-900 text-2xl\" />\n          </div>\n        </div>\n        \n        <h2 class=\"text-xl font-semibold text-center mb-1\">Continue with SmartScribe</h2>\n        <p class=\"text-sm text-center text-gray-400 mb-6\">Sign in to SmartScribe using your email account</p>\n        \n        <form @submit.prevent=\"handleLogin\">\n          <div class=\"mb-4\">\n            <input \n              type=\"email\" \n              v-model=\"email\" \n              placeholder=\"Email.Example@gmail.com\" \n              class=\"w-full p-3 rounded bg-gray-700 border border-gray-600 focus:outline-none focus:border-blue-500\"\n              required\n            />\n          </div>\n          \n          <div class=\"mb-6 relative\">\n            <input \n              ref=\"passwordInput\"\n              type=\"password\" \n              v-model=\"password\" \n              placeholder=\"Password\" \n              class=\"w-full p-3 rounded bg-gray-700 border border-gray-600 focus:outline-none focus:border-blue-500 pr-10\"\n              required\n            />\n            <button\n              type=\"button\"\n              @click=\"togglePasswordField('passwordInput')\"\n              class=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-white\"\n            >\n              <font-awesome-icon :icon=\"['fas', 'eye']\" class=\"password-visible-icon hidden\" />\n              <font-awesome-icon :icon=\"['fas', 'eye-slash']\" class=\"password-hidden-icon\" />\n            </button>\n          </div>\n          \n          <button \n            type=\"submit\" \n            class=\"w-full p-3 bg-white text-gray-900 rounded font-medium hover:bg-gray-200 transition\"\n            :disabled=\"isLoading\"\n          >\n            <span v-if=\"isLoading\">\n              <font-awesome-icon :icon=\"['fas', 'spinner']\" spin />\n              Signing in...\n            </span>\n            <span v-else>Sign In</span>\n          </button>\n        </form>\n        \n        <div class=\"flex justify-center space-x-4 my-6\">\n          <button class=\"w-8 h-8 rounded-full bg-blue-600 flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fab', 'facebook-f']\" />\n          </button>\n          <button class=\"w-8 h-8 rounded-full bg-white flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fab', 'google']\" class=\"text-gray-900\" />\n          </button>\n          <button class=\"w-8 h-8 rounded-full bg-white flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fab', 'apple']\" class=\"text-gray-900\" />\n          </button>\n        </div>\n        \n        <div class=\"text-center text-sm\">\n          <p class=\"text-gray-400\">\n            Don't have a SmartScribe Account? \n            <router-link to=\"/signup\" class=\"text-white cursor-pointer hover:underline\">Sign Up</router-link>\n          </p>\n        </div>\n      </div>\n    </main>\n\n    <!-- Footer -->\n    <footer class=\"p-4 bg-gray-800 text-gray-400 flex justify-between items-center text-sm\">\n      <div class=\"flex space-x-4\">\n        <a href=\"#\" class=\"hover:text-white\">Docs</a>\n        <a href=\"#\" class=\"hover:text-white\">Guides</a>\n        <a href=\"#\" class=\"hover:text-white\">Help</a>\n        <a href=\"#\" class=\"hover:text-white\">Contact</a>\n      </div>\n      <div>Â© 2025 SmartScribe Inc.</div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  name: 'LoginView',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    \n    const email = ref('');\n    const password = ref('');\n    const isLoading = ref(false);\n    const errorMessage = ref('');\n\n    const passwordInput = ref(null);\n\n    const togglePasswordField = (inputRef) => {\n      const inputElement = inputRef === 'passwordInput' ? passwordInput.value : confirmPasswordInput.value;\n      const button = inputElement.nextElementSibling;\n      const visibleIcon = button.querySelector('.password-visible-icon');\n      const hiddenIcon = button.querySelector('.password-hidden-icon');\n      \n      if (inputElement.type === 'password') {\n        inputElement.type = 'text';\n        visibleIcon.classList.remove('hidden');\n        hiddenIcon.classList.add('hidden');\n      } else {\n        inputElement.type = 'password';\n        visibleIcon.classList.add('hidden');\n        hiddenIcon.classList.remove('hidden');\n      }\n    };\n\n    const handleLogin = async () => {\n      try {\n        isLoading.value = true;\n        errorMessage.value = '';\n        \n        await store.dispatch('auth/login', {\n          email: email.value,\n          password: password.value\n        });\n        \n        router.push('/dashboard');\n      } catch (error) {\n        errorMessage.value = error.message || 'Failed to login. Please try again.';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    return {\n      email,\n      password,\n      isLoading,\n      errorMessage,\n      handleLogin,\n      passwordInput,\n      togglePasswordField\n    };\n  }\n}\n</script>"],"mappings":";AAqGA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,MAAK,GAAIJ,SAAS,CAAC,CAAC;IAE1B,MAAMK,KAAI,GAAIP,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMQ,QAAO,GAAIR,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMS,SAAQ,GAAIT,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMU,YAAW,GAAIV,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMW,aAAY,GAAIX,GAAG,CAAC,IAAI,CAAC;IAE/B,MAAMY,mBAAkB,GAAKC,QAAQ,IAAK;MACxC,MAAMC,YAAW,GAAID,QAAO,KAAM,eAAc,GAAIF,aAAa,CAACI,KAAI,GAAIC,oBAAoB,CAACD,KAAK;MACpG,MAAME,MAAK,GAAIH,YAAY,CAACI,kBAAkB;MAC9C,MAAMC,WAAU,GAAIF,MAAM,CAACG,aAAa,CAAC,wBAAwB,CAAC;MAClE,MAAMC,UAAS,GAAIJ,MAAM,CAACG,aAAa,CAAC,uBAAuB,CAAC;MAEhE,IAAIN,YAAY,CAACQ,IAAG,KAAM,UAAU,EAAE;QACpCR,YAAY,CAACQ,IAAG,GAAI,MAAM;QAC1BH,WAAW,CAACI,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;QACtCH,UAAU,CAACE,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;MACpC,OAAO;QACLX,YAAY,CAACQ,IAAG,GAAI,UAAU;QAC9BH,WAAW,CAACI,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;QACnCJ,UAAU,CAACE,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;MACvC;IACF,CAAC;IAED,MAAME,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACFjB,SAAS,CAACM,KAAI,GAAI,IAAI;QACtBL,YAAY,CAACK,KAAI,GAAI,EAAE;QAEvB,MAAMV,KAAK,CAACsB,QAAQ,CAAC,YAAY,EAAE;UACjCpB,KAAK,EAAEA,KAAK,CAACQ,KAAK;UAClBP,QAAQ,EAAEA,QAAQ,CAACO;QACrB,CAAC,CAAC;QAEFT,MAAM,CAACsB,IAAI,CAAC,YAAY,CAAC;MAC3B,EAAE,OAAOC,KAAK,EAAE;QACdnB,YAAY,CAACK,KAAI,GAAIc,KAAK,CAACC,OAAM,IAAK,oCAAoC;MAC5E,UAAU;QACRrB,SAAS,CAACM,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;IAED,OAAO;MACLR,KAAK;MACLC,QAAQ;MACRC,SAAS;MACTC,YAAY;MACZgB,WAAW;MACXf,aAAa;MACbC;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}