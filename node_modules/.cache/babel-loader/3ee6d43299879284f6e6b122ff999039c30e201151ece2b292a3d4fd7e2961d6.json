{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\n// import HomeView from '../views/HomeView.vue'\nimport LoginView from '../views/LoginView.vue';\nimport DashboardView from '../views/DashboardView.vue';\nimport SignupView from '../views/SignupView.vue';\nimport NotesView from '../views/NotesView.vue';\n// import NoteEditorView from '../views/NoteEditorView.vue'\nimport ProgressView from '../views/ProgressView.vue';\nimport SettingsView from '../views/SettingsView.vue';\n// import { meta } from '@babel/eslint-parser'\n\nconst routes = [{\n  path: '/',\n  name: 'dashboard',\n  component: DashboardView\n}, {\n  path: '/login',\n  name: 'login',\n  component: LoginView\n}, {\n  path: '/signup',\n  name: 'signup',\n  component: SignupView\n}, {\n  path: '/notes',\n  name: 'notes',\n  component: NotesView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/notes/:id',\n  name: 'note-detail',\n  component: () => import('../views/NoteDetailView.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  //path: '/notes/edit',\n  //name: 'note-editor',\n  //component: NoteEditorView,\n  //meta: { requiresAuth: true }\n}, {\n  path: '/progress',\n  name: 'progress',\n  component: ProgressView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/settings',\n  name: 'settings',\n  component: SettingsView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  //path: '/:pathMatch(.*)*',\n  //name: 'not-found',\n  //component: NotFoundView,\n  //meta: { requiresAuth: true }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Navigation guard\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = localStorage.getItem('user') !== null;\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginView","DashboardView","SignupView","NotesView","ProgressView","SettingsView","routes","path","name","component","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","matched","some","record"],"sources":["C:/laragon/www/smartscribe-newnew/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\n// import HomeView from '../views/HomeView.vue'\nimport LoginView from '../views/LoginView.vue'\nimport DashboardView from '../views/DashboardView.vue'\nimport SignupView from '../views/SignupView.vue'\nimport NotesView from '../views/NotesView.vue'\n// import NoteEditorView from '../views/NoteEditorView.vue'\nimport ProgressView from '../views/ProgressView.vue'\nimport SettingsView from '../views/SettingsView.vue'\n// import { meta } from '@babel/eslint-parser'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'dashboard',\n    component: DashboardView\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: LoginView\n  },\n  {\n    path: '/signup',\n    name: 'signup',\n    component: SignupView\n  },\n  {\n    path: '/notes',\n    name: 'notes',\n    component: NotesView,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/notes/:id',\n    name: 'note-detail',\n    component: () => import('../views/NoteDetailView.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    //path: '/notes/edit',\n    //name: 'note-editor',\n    //component: NoteEditorView,\n    //meta: { requiresAuth: true }\n  },\n  {\n    path: '/progress',\n    name: 'progress',\n    component: ProgressView,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/settings',\n    name: 'settings',\n    component: SettingsView,\n    meta: { requiresAuth: true }\n  },\n  {\n    //path: '/:pathMatch(.*)*',\n    //name: 'not-found',\n    //component: NotFoundView,\n    //meta: { requiresAuth: true }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// Navigation guard\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = localStorage.getItem('user') !== null;\n  \n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\n    next('/login');\n  } else {\n    next();\n  }\n})\n\nexport default router"],"mappings":";;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D;AACA,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C;AACA,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AACpD;;AAEA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN,SAAS;EACpBO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B,CAAC;EACtDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACE;EACA;EACA;EACA;AAAA,CACD,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL,YAAY;EACvBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEJ,YAAY;EACvBK,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACE;EACA;EACA;EACA;AAAA,CACD,CACF;AAED,MAAMC,MAAM,GAAGd,YAAY,CAAC;EAC1Be,OAAO,EAAEd,gBAAgB,CAACe,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV;AACF,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI;EAE7D,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAChB,IAAI,CAACC,YAAY,CAAC,IAAI,CAACU,eAAe,EAAE;IAC3ED,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}