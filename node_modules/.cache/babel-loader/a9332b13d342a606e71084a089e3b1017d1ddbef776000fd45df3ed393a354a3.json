{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  name: 'LoginView',\n  setup() {\n    // const store = useStore();\n    const router = useRouter();\n    const email = ref('');\n    const password = ref('');\n    const isLoading = ref(false);\n    const errorMessage = ref('');\n    const passwordVisible = ref(false);\n    const handleLogin = async () => {\n      try {\n        isLoading.value = true;\n        errorMessage.value = '';\n\n        // await store.dispatch('auth/login', {\n        //   email: email.value,\n        //   password: password.value\n        // });\n        let data = await axios.post('http:://localhost:3000/api/login', {\n          email: email.value,\n          password: password.value\n        });\n        if (data) {\n          router.push('/dashboard');\n        }\n      } catch (error) {\n        errorMessage.value = error.message || 'Failed to login. Please try again.';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    return {\n      email,\n      password,\n      isLoading,\n      errorMessage,\n      handleLogin,\n      passwordVisible\n    };\n  }\n};","map":{"version":3,"names":["ref","useStore","useRouter","axios","name","setup","router","email","password","isLoading","errorMessage","passwordVisible","handleLogin","value","data","post","push","error","message"],"sources":["C:\\laragon\\www\\smartscribe-newnew\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col bg-gray-900 text-white\">\n    <!-- Header -->\n    <header class=\"p-4 flex justify-between items-center\">\n      <router-link to=\"/\" class=\"text-xl font-bold\">SmartScribe</router-link>\n      <div class=\"space-x-2\">\n        <router-link to=\"/signup\" class=\"px-4 py-2 border border-white rounded-md hover:bg-gray-800 transition\">Sign Up</router-link>\n        <router-link to=\"/contact\" class=\"px-4 py-2 bg-white text-gray-900 rounded-md hover:bg-gray-200 transition\">Contact</router-link>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"flex-grow flex items-center justify-center p-4\">\n      <div class=\"bg-gray-800 rounded-lg p-8 w-full max-w-md\">\n        <div class=\"flex justify-center mb-4\">\n          <div class=\"w-16 h-16 bg-white rounded-full flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fas', 'book']\" class=\"text-gray-900 text-2xl\" />\n          </div>\n        </div>\n        \n        <h2 class=\"text-xl font-semibold text-center mb-1\">Continue with SmartScribe</h2>\n        <p class=\"text-sm text-center text-gray-400 mb-6\">Sign in to SmartScribe using your email account</p>\n        \n        <form @submit.prevent=\"handleLogin\">\n          <div class=\"mb-4\">\n            <input \n              type=\"email\" \n              v-model=\"email\" \n              placeholder=\"Email.Example@gmail.com\" \n              class=\"w-full p-3 rounded bg-gray-700 border border-gray-600 focus:outline-none focus:border-blue-500\"\n              required\n            />\n          </div>\n          \n          <div class=\"mb-6 relative\">\n            <input \n              :type=\"passwordVisible ? 'text' : 'password'\" \n              v-model=\"password\" \n              placeholder=\"Password\" \n              class=\"w-full p-3 rounded bg-gray-700 border border-gray-600 focus:outline-none focus:border-blue-500 pr-10\"\n              required\n            />\n            <button\n              type=\"button\"\n              @click=\"passwordVisible = !passwordVisible\"\n              class=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-white\"\n            >\n              <font-awesome-icon :icon=\"['fas', passwordVisible ? 'eye-slash' : 'eye']\" />\n            </button>\n          </div>\n          \n          <button \n            type=\"submit\" \n            class=\"w-full p-3 bg-white text-gray-900 rounded font-medium hover:bg-gray-200 transition\"\n            :disabled=\"isLoading\"\n          >\n            <span v-if=\"isLoading\">\n              <font-awesome-icon :icon=\"['fas', 'spinner']\" spin />\n              Signing in...\n            </span>\n            <span v-else>Sign In</span>\n          </button>\n        </form>\n        \n        <div class=\"flex justify-center space-x-4 my-6\">\n          <button class=\"w-8 h-8 rounded-full bg-blue-600 flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fab', 'facebook-f']\" />\n          </button>\n          <button class=\"w-8 h-8 rounded-full bg-white flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fab', 'google']\" class=\"text-gray-900\" />\n          </button>\n          <button class=\"w-8 h-8 rounded-full bg-white flex items-center justify-center\">\n            <font-awesome-icon :icon=\"['fab', 'apple']\" class=\"text-gray-900\" />\n          </button>\n        </div>\n        \n        <div class=\"text-center text-sm\">\n          <p class=\"text-gray-400\">\n            Don't have a SmartScribe Account? \n            <router-link to=\"/signup\" class=\"text-white cursor-pointer hover:underline\">Sign Up</router-link>\n          </p>\n        </div>\n      </div>\n    </main>\n\n    <!-- Footer -->\n    <footer class=\"p-4 bg-gray-800 text-gray-400 flex justify-between items-center text-sm\">\n      <div class=\"flex space-x-4\">\n        <a href=\"#\" class=\"hover:text-white\">Docs</a>\n        <a href=\"#\" class=\"hover:text-white\">Guides</a>\n        <a href=\"#\" class=\"hover:text-white\">Help</a>\n        <a href=\"#\" class=\"hover:text-white\">Contact</a>\n      </div>\n      <div>Â© 2025 SmartScribe Inc.</div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\n\nexport default {\n  name: 'LoginView',\n  setup() {\n    // const store = useStore();\n    const router = useRouter();\n    \n    const email = ref('');\n    const password = ref('');\n    const isLoading = ref(false);\n    const errorMessage = ref('');\n\n    const passwordVisible = ref(false);\n\n    const handleLogin = async () => {\n      try {\n        isLoading.value = true;\n        errorMessage.value = '';\n        \n        // await store.dispatch('auth/login', {\n        //   email: email.value,\n        //   password: password.value\n        // });\n        let data = await axios.post('http:://localhost:3000/api/login', {\n          email: email.value,\n          password: password.value\n        });\n\n        if (data) {\n          router.push('/dashboard');\n        }\n        \n      } catch (error) {\n        errorMessage.value = error.message || 'Failed to login. Please try again.';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    return {\n      email,\n      password,\n      isLoading,\n      errorMessage,\n      handleLogin,\n      passwordVisible\n    };\n  }\n}\n</script>"],"mappings":";AAmGA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAQ,QAAS,YAAY;AACtC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,MAAK,GAAIJ,SAAS,CAAC,CAAC;IAE1B,MAAMK,KAAI,GAAIP,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMQ,QAAO,GAAIR,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMS,SAAQ,GAAIT,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMU,YAAW,GAAIV,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMW,eAAc,GAAIX,GAAG,CAAC,KAAK,CAAC;IAElC,MAAMY,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACFH,SAAS,CAACI,KAAI,GAAI,IAAI;QACtBH,YAAY,CAACG,KAAI,GAAI,EAAE;;QAEvB;QACA;QACA;QACA;QACA,IAAIC,IAAG,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,kCAAkC,EAAE;UAC9DR,KAAK,EAAEA,KAAK,CAACM,KAAK;UAClBL,QAAQ,EAAEA,QAAQ,CAACK;QACrB,CAAC,CAAC;QAEF,IAAIC,IAAI,EAAE;UACRR,MAAM,CAACU,IAAI,CAAC,YAAY,CAAC;QAC3B;MAEF,EAAE,OAAOC,KAAK,EAAE;QACdP,YAAY,CAACG,KAAI,GAAII,KAAK,CAACC,OAAM,IAAK,oCAAoC;MAC5E,UAAU;QACRT,SAAS,CAACI,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;IAED,OAAO;MACLN,KAAK;MACLC,QAAQ;MACRC,SAAS;MACTC,YAAY;MACZE,WAAW;MACXD;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}